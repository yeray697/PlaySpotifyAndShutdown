#!/usr/bin/env bash

# Spotify methods got from https://gist.github.com/wandernauta/6800547

# Change this uri to play yours spotify playlist
URI="spotify:user:yeray007n2:playlist:1OblHqckaTmCmvVVGCTE4J"
# Change this if you saved the script with a different name
COMMAND_NAME="pss"

# CONSTANTS

SP_DEST="org.mpris.MediaPlayer2.spotify"
SP_PATH="/org/mpris/MediaPlayer2"
SP_MEMB="org.mpris.MediaPlayer2.Player"

HELP_COMMAND_1="-h"
HELP_COMMAND_2="--help"
STOP_COMMAND="stop"
SPOTIFY_SLEEP=2

# SHELL OPTIONS

shopt -s expand_aliases

# UTILITY FUNCTIONS

function require {
  hash $1 2>/dev/null || {
    echo >&2 "Error: '$1' is required, but was not found."; exit 1;
  }
}

# COMMON REQUIRED BINARIES

# We need dbus-send to talk to Spotify.
require dbus-send

# Assert standard Unix utilities are available.
require grep
require echo
require sleep
require pkill
require shutdown

function pss-dbus {
  # Sends the given method to Spotify over dbus.
  dbus-send --print-reply --dest=$SP_DEST $SP_PATH $SP_MEMB.$1 ${*:2} > /dev/null
}

function pss-open {
  # Opens the given spotify: URI in Spotify.
  pss-dbus OpenUri string:$1
}

function pss-print_help {
	echo "Usage: pss [time]"
	echo "Shutdown your pc after X minutes and play a playlist during 10 minutes (default)."
	echo ""
	echo "  pss 5       - Music starts to play after 5 minutes and your pc is shutdown after 10 minutes (default)"
	echo "  pss 5 8     - Music starts to play after 5 minutes and your pc is shutdown after 8 minutes"
}
function pss-isvalidparameter {
	if [[ -z "$1" ]]; then
		return 1
	else
		return 0
	fi
}
function pss-isinteger {
	if [ "$1" -eq "$1" ] 2>/dev/null; then
		return 0
	else
		return 1
	fi
}
function pss-error {
	echo $1
	echo $USAGE
	exit 1
}
function pss-stop {
	shutdown -c
	pss-dbus "Pause" > /dev/null
	pkill -f $COMMAND_NAME
}



# Getting time as an argument passed
time=$1
shutdowntime=$2

if pss-isvalidparameter $time; then
	# if [ "$time" -eq "$time" ] 2>/dev/null
	if pss-isinteger $time;
	then
		# Getting shutdown time
		if pss-isvalidparameter $shutdowntime; then
			if ! pss-isinteger $shutdowntime; then
				pss-error "ERROR: shutdown time must be an integer."
			fi
		else
			shutdowntime=10
		fi
		# Sleeping
		time=$(($time * 60))
		sleep $time;
		# Setting shutdown
		shutdown -h +$shutdowntime
		# Playing music while pc is waiting to shutdown:
			# Opening spotify if it is not open
		SPOTIFY_PID="$(pidof -s spotify || pidof -s .spotify-wrapped)"
		if [[ -z "$SPOTIFY_PID" ]]; then
		  spotify & sleep $SPOTIFY_SLEEP
		fi
			# Playing list
		pss-open $URI
	else
		  # Arguments given, check if it's a command.
		 if [ "${time,,}" == "$HELP_COMMAND_1" ] || [ "${time,,}" == "$HELP_COMMAND_2" ] ; then
		 	pss-print_help
		 elif [ "${time,,}" == "$STOP_COMMAND" ]; then
			pss-stop
		 else
		 	pss-error "ERROR: sleep time must be an integer."
		 fi
	fi
else
	pss-print_help
fi
